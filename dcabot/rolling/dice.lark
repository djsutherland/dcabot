# ignore whitespace
%import common.WS_INLINE
%ignore WS_INLINE


# want to handle positive integers specially, don't use stuff from common
POSDIGIT: "1".."9"
DIGIT: "0" | POSDIGIT
POSINT: "0"* POSDIGIT DIGIT*
NATURAL: "0"+ | POSINT

DECIMAL: NATURAL "." NATURAL? | "." NATURAL


?start: list
      | "`" list "`"
      | "```" "\n"* list "\n"* "```"

?list: ( commented_expr (","|";"|"\n")+ )* commented_expr

PRECOMMENT: /[^:#\n`]+/
POSTCOMMENT: /[^\n`]+/

?commented_expr: sum
               | PRECOMMENT ":" sum [ "#" (POSTCOMMENT)? ]  -> pre_comment
               | sum "#" [POSTCOMMENT]                      -> post_comment

PLUSMINUS: "+" | "-"
?sum: (product PLUSMINUS)* product

PRODDIV: "*" | "/"
?product: (maybeneg PRODDIV )* maybeneg

?maybeneg: atom
         | "-" atom -> neg

?atom: NATURAL
     | DECIMAL
     | "(" sum ")"
     | atom "^" atom    -> pow
     | hits

CMP: ">" | ">=" | "<" | "<=" | "=" | "!=" | "â‰ "
?hits: roll
     | roll CMP  NATURAL       -> hits_cmp
     | "$"? "E" POSINT         -> nb_easy
     | "$"? "N" POSINT         -> nb_normal
     | "$"? "H" POSINT         -> nb_hard

# TODO: allow expressions here? do we want to support  (4+d3)d12 ?
#       if so, need to rearrange a bit for things like "d6^2"
?roll: [POSINT] "d"i POSINT
     | [POSINT] "d"i POSINT ("!"|"explode"i|"exploding"i|"explode above"i) POSINT -> roll_explode
     | POSINT "d"i POSINT ("h"i|"k"i|"highest"i|"keep"i|"keep highest"i) NATURAL  -> roll_highest
     | POSINT "d"i POSINT ("l"i|"lowest"i|"keep lowest"i)  NATURAL                -> roll_lowest
     | POSINT "d"i POSINT ("r"i|"reroll"i|"reroll lowest"i)  POSINT               -> roll_reroll
# should we allow combining highest/lowest/exploding/reroll?
